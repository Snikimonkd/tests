// Code generated by MockGen. DO NOT EDIT.
// Source: lab1/internal/usecase (interfaces: CreateUserRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "lab1/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCreateUserRepository is a mock of CreateUserRepository interface.
type MockCreateUserRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCreateUserRepositoryMockRecorder
}

// MockCreateUserRepositoryMockRecorder is the mock recorder for MockCreateUserRepository.
type MockCreateUserRepositoryMockRecorder struct {
	mock *MockCreateUserRepository
}

// NewMockCreateUserRepository creates a new mock instance.
func NewMockCreateUserRepository(ctrl *gomock.Controller) *MockCreateUserRepository {
	mock := &MockCreateUserRepository{ctrl: ctrl}
	mock.recorder = &MockCreateUserRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateUserRepository) EXPECT() *MockCreateUserRepositoryMockRecorder {
	return m.recorder
}

// CheckUserExist mocks base method.
func (m *MockCreateUserRepository) CheckUserExist(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckUserExist", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckUserExist indicates an expected call of CheckUserExist.
func (mr *MockCreateUserRepositoryMockRecorder) CheckUserExist(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckUserExist", reflect.TypeOf((*MockCreateUserRepository)(nil).CheckUserExist), arg0)
}

// CreateUser mocks base method.
func (m *MockCreateUserRepository) CreateUser(arg0 model.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockCreateUserRepositoryMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockCreateUserRepository)(nil).CreateUser), arg0)
}
