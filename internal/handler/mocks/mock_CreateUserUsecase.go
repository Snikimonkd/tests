// Code generated by MockGen. DO NOT EDIT.
// Source: lab1/internal/handler (interfaces: CreateUserUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "lab1/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCreateUserUsecase is a mock of CreateUserUsecase interface.
type MockCreateUserUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockCreateUserUsecaseMockRecorder
}

// MockCreateUserUsecaseMockRecorder is the mock recorder for MockCreateUserUsecase.
type MockCreateUserUsecaseMockRecorder struct {
	mock *MockCreateUserUsecase
}

// NewMockCreateUserUsecase creates a new mock instance.
func NewMockCreateUserUsecase(ctrl *gomock.Controller) *MockCreateUserUsecase {
	mock := &MockCreateUserUsecase{ctrl: ctrl}
	mock.recorder = &MockCreateUserUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateUserUsecase) EXPECT() *MockCreateUserUsecaseMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockCreateUserUsecase) CreateUser(arg0 model.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockCreateUserUsecaseMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockCreateUserUsecase)(nil).CreateUser), arg0)
}
